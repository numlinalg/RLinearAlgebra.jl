############################################################################################
## This file is part of RLinearAlgebra.jl
##
## Overview: abstractions and methods for logging linear system equation solvers, and
## providing stopping rules.
##
## Contents
## - Abstract Types
## - `log_update!` function documentation
## - Loggers
## - Export Statements
##
############################################################################################

# Dependencies: LinearAlgebra

#############################################
# Abstract Types
#############################################

"""
    LinSysSolverLog

Abstract supertype for logging information about a randomized linear system solver.

Note, all descendants that are `mutable struct`s must have fields
- `iterations::Int64`, which tracks the number of iterations of the solver
- `converged::Bool`, which tracks whether the solver has converged to the solution (by some
    notion of convergence that is specified by the user).
"""
abstract type LinSysSolverLog end

#############################################
# `log_update!` function docstring
#############################################
"""
    log_update!(
        log::LinSysSolverLog,
        sampler::LinSysSampler,
        x::AbstractVector,
        samp:s:Tuple,
        iter::Int64,
        A,
        b)

A common interface for specifying different strategies for updating the `log` with supertype
    `LinSysSolverLog`. A `sampler` of supertype `LinSysSampler` can be used to provide
    specific multiple implementations for the same `log` type. `x` is the iterate value.
    `samp` is the output generated by the `sample` function (see `linears_samplers.jl`).
    `iter` is the current iteration counter. `A` and `b` specify the linear system.
"""
function log_update!(
    log::Nothing,
    sampler::LinSysSampler,
    x::AbstractVector,
    samp::Tuple,
    iter::Int64,
    A,
    b
)
    return nothing
end


#############################################
# Loggers
#############################################
include("linear_solver_logs/solve_log_oracle.jl")
include("linear_solver_logs/solve_log_full.jl")
include("linear_solver_logs/solve_log_ma.jl")
include("linear_solver_logs/solve_log_full_ma.jl")
#############################################
# Exports
#############################################
#export LinSysSolverLog
#export LSLogOracle, LSLogFull
